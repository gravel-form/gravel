{"version":3,"sources":["json-schema-traverse.ts"],"names":[],"mappings":"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","file":"json-schema-traverse.js","sourcesContent":["import { JSONSchema7Definition, JSONSchema7 } from 'json-schema';\n\nconst keywords: (keyof Pick<\n  JSONSchema7,\n  'additionalItems' | 'items' | 'contains' | 'additionalProperties' | 'propertyNames' | 'not' | 'if' | 'then' | 'else'\n>)[] = ['additionalItems', 'items', 'contains', 'additionalProperties', 'propertyNames', 'not', 'if', 'then', 'else'];\n\nconst arrayKeywords: (keyof Pick<JSONSchema7, 'items' | 'allOf' | 'anyOf' | 'oneOf'>)[] = [\n  'items',\n  'allOf',\n  'anyOf',\n  'oneOf',\n];\n\nconst propsKeywords: (keyof Pick<\n  JSONSchema7,\n  'definitions' | 'properties' | 'patternProperties' | 'dependencies'\n>)[] = ['definitions', 'properties', 'patternProperties', 'dependencies'];\n\nfunction parseLocalJSONPointer(pointer: string): string[] {\n  return pointer\n    .slice(2)\n    .split('/')\n    .map((str) => {\n      return decodeURIComponent(str)\n        .replace(/~1/g, '/')\n        .replace(/~0/g, '~');\n    });\n}\n\nfunction _getSchema(schema: JSONSchema7, path: string[]): JSONSchema7Definition | null {\n  let _schema: JSONSchema7Definition | undefined;\n  let next: JSONSchema7Definition | undefined = schema;\n  let i = 0;\n  while (i < path.length) {\n    _schema = next;\n    next = undefined;\n    if (!_schema || typeof _schema !== 'object') return null;\n    for (const key of propsKeywords) {\n      if (key !== path[i]) continue;\n\n      const sch: { [key: string]: JSONSchema7Definition | string[] } | undefined = _schema[key];\n      if (!sch || typeof sch !== 'object') return null;\n      const _next: JSONSchema7Definition | string[] = sch[path[i + 1]];\n      if (Array.isArray(_next)) break;\n      next = _next;\n      i += 2;\n    }\n    if (next) continue;\n\n    for (const key of arrayKeywords) {\n      if (key !== path[i]) continue;\n      const sch: JSONSchema7Definition[] | JSONSchema7Definition | undefined = _schema[key];\n      if (!Array.isArray(sch)) break;\n      next = sch[+path[i + 2]];\n      i += 2;\n    }\n    if (next) continue;\n\n    for (const key of keywords) {\n      if (key !== path[i]) continue;\n      const sch: JSONSchema7Definition[] | JSONSchema7Definition | undefined = _schema[key];\n      if (!sch || Array.isArray(sch)) return null;\n      next = sch;\n      i += 1;\n    }\n  }\n\n  return next || null;\n}\n\nexport function getSchemaByPointer(\n  schema: JSONSchema7,\n  jsonPointer: string\n): { schema: JSONSchema7Definition; path: string[] } | null {\n  const path = parseLocalJSONPointer(jsonPointer);\n  const sch = _getSchema(schema, path);\n\n  return sch ? { schema: sch, path } : null;\n}\n\nfunction* _traverse(\n  schema: JSONSchema7Definition,\n  path: (string | number)[]\n): Generator<{ schema: JSONSchema7; path: (string | number)[] }, void, void> {\n  if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n    yield { schema, path };\n    for (const key of propsKeywords) {\n      const sch: { [key: string]: JSONSchema7Definition | string[] } | undefined = schema[key];\n      if (sch && typeof sch == 'object') {\n        for (const prop in sch) {\n          const child = sch[prop];\n          if (Array.isArray(child) || typeof child !== 'object') continue;\n          yield* _traverse(child, [...path, key, prop]);\n        }\n      }\n    }\n\n    for (const key of arrayKeywords) {\n      const sch: JSONSchema7Definition[] | JSONSchema7Definition | undefined = schema[key];\n      if (!Array.isArray(sch)) continue;\n      for (const i in sch) {\n        yield* _traverse(sch[i], [...path, key, i]);\n      }\n    }\n\n    for (const key of keywords) {\n      const sch: JSONSchema7Definition[] | JSONSchema7Definition | undefined = schema[key];\n      if (!sch || Array.isArray(sch)) continue;\n      yield* _traverse(sch, [...path, key]);\n    }\n  }\n}\n\nexport function* traverse(\n  schema: JSONSchema7\n): Generator<{ schema: JSONSchema7; path: (string | number)[] }, void, void> {\n  yield* _traverse(schema, []);\n}\n\nexport default traverse;\n"]}
{"version":3,"sources":["compose.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,WAAW,eAAe;IAC9B,IAAI,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;CACjD;AAED,MAAM,CAAC,OAAO,UAAU,OAAO,CAAC,CAAC,SAAS,eAAe,EAAE,OAAO,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAcpH","file":"compose.d.ts","sourcesContent":["import React from 'react';\n\nexport interface MiddlewareProps {\n  next: (props: any) => React.ReactElement | null;\n}\n\nexport default function compose<P extends MiddlewareProps>(widgets: React.ComponentType<P>[]): React.ComponentType<P> {\n  const Composed: React.FC<P> = (props) => {\n    const dispatch: (nextProp: P, i: number) => React.ReactElement | null = (nextProps, i) => {\n      const Widget = widgets[i];\n      if (i >= widgets.length) return props.next ? props.next(nextProps) : null;\n      const pp: P = {\n        ...nextProps,\n        next: (_props: P) => dispatch(_props, i + 1),\n      };\n      return <Widget {...pp} />;\n    };\n    return dispatch(props, 0);\n  };\n  return Composed;\n}\n"]}